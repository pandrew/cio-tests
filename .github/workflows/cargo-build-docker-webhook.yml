name: cargo-build-webhook-docker
on:
  push:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-build.yml
      - rust-toolchain
  pull_request:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-build.yml
      - rust-toolchain
  repository_dispatch:
    types: 
      - webhook-docker  

concurrency:
  group: docker-image-manual-${{ github.ref }}
  cancel-in-progress: true

env:
  GIT_REPO_BLIZZARD_USER: ${{secrets.GIT_REPO_BLIZZARD_USER}}
  GIT_REPO_BLIZZARD_TOKEN: ${{secrets.GIT_REPO_BLIZZARD_TOKEN}}
  GIT_REF: ${{ github.event.client_payload.ref }}
  GIT_REPO: ${{ github.event.client_payload.repo }}
  GIT_PROVIDER: ${{ github.event.client_payload.provider }}


jobs:
  cargobuild:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        run: |
          git clone -b ${GIT_REF} https://${GIT_REPO_BLIZZARD_USER}:${GIT_REPO_BLIZZARD_TOKEN}@gitlab.com/${GIT_REPO}.git t/${{ github.run_id }}
          if [ -f t/${{ github.run_id }}/rust-toolchain ]; then cp t/${{ github.run_id }}/rust-toolchain . ;fi
        shell: bash
        env:
          GIT_REPO_BLIZZARD_USER: ${{secrets.GIT_REPO_BLIZZARD_USER}}
          GIT_REPO_BLIZZARD_TOKEN: ${{secrets.GIT_REPO_BLIZZARD_TOKEN}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-manual-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-manual-${{ github.ref }}
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: t/${{ github.run_id }}
          file: t/${{ github.run_id }}/${{ github.event.client_payload.dockerimage_path }}/Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.client_payload.repo }}/${{ github.event.client_payload.dockerimage }}:latest
          secrets: |
            "blizzard_user=${{ secrets.GIT_REPO_BLIZZARD_USER }}"
            "blizzard_token=${{ secrets.GIT_REPO_BLIZZARD_TOKEN }}"
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
