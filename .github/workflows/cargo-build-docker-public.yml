on:
  push:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-build.yml
      - rust-toolchain
  pull_request:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-build.yml
      - rust-toolchain
  workflow_dispatch:
    inputs:
      provider:
        description: 'Provider (github.com'
        required: true
      repo:
        description: 'Repository (user/repo)'
        required: true
      dockerimage:
        description: 'Docker image name'
        required: true
      branch:
        description: 'Branch'
        default: 'main'
        required: true

name: cargo build docker public
jobs:
  cargobuild:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        run: |
          if [ -z ${GIT_REPO} ]; then export GIT_REPO=${{ github.event.inputs.repo }} ;fi
          git clone -b ${{ github.event.inputs.branch }} https://@${GIT_PROVIDER}/${GIT_REPO}.git t/${{ github.run_id }}
          if [ -f t/${{ github.run_id }}/rust-toolchain ]; then cp t/${{ github.run_id }}/rust-toolchain . ;fi
        shell: bash
        env:
          GIT_PROVIDER: ${{ github.event.inputs.provider }}
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: t/${{ github.run_id }}
          file: t/${{ github.run_id }}/${{ github.event.inputs.dockerimage }}/Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.inputs.repo }}/${{ github.event.inputs.dockerimage }}:latest

