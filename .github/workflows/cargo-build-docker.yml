name: docker-image-manual
on:
  push:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-build.yml
      - rust-toolchain
  pull_request:
    paths:
      - '**.rs'
      - '*/Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/cargo-build.yml
      - rust-toolchain
  workflow_dispatch:
    inputs:
      repo:
        description: 'Repository (user/repo)'
        required: true
      dockerimage:
        description: 'Docker image name'
        required: true
      branch:
        description: 'Branch'
        default: 'main'
        required: true
      push:
        description: 'Push image?'
        type: boolean
        required: true

concurrency:
  group: docker-image-manual-${{ github.ref }}
  cancel-in-progress: true

jobs:
  cargobuild:
    name: cargo build
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        run: |
          if [ -z ${GIT_REF} ]; then export GIT_REF=${{ github.event.inputs.branch }}  ;fi
          if [ -z ${GIT_REPO} ]; then export GIT_REPO=${{ github.event.inputs.repo }} ;fi
          git clone -b ${GIT_REF} https://${GIT_REPO_BLIZZARD_USER}:${GIT_REPO_BLIZZARD_TOKEN}@gitlab.com/${GIT_REPO}.git t/${{ github.run_id }}
          cp t/${{ github.run_id }}/rust-toolchain .
        shell: bash
        env:
          GIT_REPO_BLIZZARD_USER: ${{secrets.GIT_REPO_BLIZZARD_USER}}
          GIT_REPO_BLIZZARD_TOKEN: ${{secrets.GIT_REPO_BLIZZARD_TOKEN}}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-manual-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-buildx-manual-${{ github.ref }}
      - name: Login to docker registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_ACCESS_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: t/${{ github.run_id }}
          file: t/${{ github.run_id }}/${{ github.event.inputs.dockerimage }}/Dockerfile
          push: ${{ github.event.inputs.push }}
          tags: ${{ secrets.DOCKER_REGISTRY }}/${{ github.event.inputs.repo }}/${{ github.event.inputs.dockerimage }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
